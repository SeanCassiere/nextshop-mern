import React from "react";
import { useLocation, useMatch, useNavigate } from "@tanstack/react-location";
import { Helmet } from "react-helmet-async";
import { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';

import Header from "../../components/Header";
import Input from "../../components/Input";
import Button from "../../components/Button";

import { useAuth } from "../../context/AuthContext";
import { ResponseParsed } from "../../api/base";
import { LocationGenerics } from "../../App";
import Checkbox from "../../components/Checkbox";
import { adminUpdateUser, AdminUpdateUserDTO, getUserByIdForAdmin } from "../../api/admin";
import { User } from "../../types/User";

const formKeys = ["name", "email"];

const UserEdit = () => {
	const navigate = useNavigate();
	const location = useLocation();
	const queryClient = useQueryClient();

	const {
		params: { userId },
	} = useMatch<LocationGenerics>();

	const { user } = useAuth();
	const token = user?.token ?? "";

	const [formData, setFormData] = React.useState<User | null>(null);

	const { data: userQuery } = useQuery<ResponseParsed<User>, any>(
		["users", userId],
		() => getUserByIdForAdmin({ userId, token }),
		{
			onError: () => {
				navigate({ to: "/admin/users" });
			},
			onSuccess: (res) => {
				setFormData(res.data);
			},
		}
	);

	const { mutate: updateUser, isLoading: isUpdating } = useMutation<ResponseParsed<User>, any, AdminUpdateUserDTO>(
		adminUpdateUser,
		{
			onSuccess: () => {
				queryClient.invalidateQueries(["admin", "users"]);
				queryClient.invalidateQueries(["users"]);
				location.history.back();
			},
		}
	);

	const handleFormChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
		const { name, value } = e.target;
		if (formKeys.includes(name)) {
			setFormData((prev) => {
				if (!prev) return null;
				return { ...prev, [name]: value };
			});
		}
	};

	return (
		<React.Fragment>
			<Header />
			<Helmet>
				<title>Edit - {`${userQuery?.data?.name}`} | Nextshop</title>
			</Helmet>
			<main>
				<section className='pb-7'>
					<div className='max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 flex flex-col'>
						<div className='py-5'>
							<button
								onClick={() => {
									location.history.back();
								}}
								className='rounded-md py-2 px-4 bg-none hover:bg-gray-50'
							>
								Go Back
							</button>
						</div>
						<div className=''>
							<div className='max-w-lg '>
								<h2 className='text-3xl mb-4 font-bold tracking-tight text-gray-900'>Edit user</h2>
								<p className='mt-2 text-sm text-gray-500'>Manage the information for this user.</p>
								{formData && (
									<form
										className='pt-5 flex flex-col gap-5'
										onSubmit={(e) => {
											e.preventDefault();
											updateUser({
												token,
												userId,
												name: formData.name,
												email: formData.name,
												isAdmin: formData.isAdmin,
											});
										}}
									>
										<div className='flex flex-col gap-5'>
											<Input label='ID (autogenerated)' type='text' value={formData._id} disabled readOnly />
											<Input
												label='Full name'
												name='name'
												type='text'
												value={formData.name}
												onChange={handleFormChange}
												required
											/>
											<Input
												label='Email address'
												name='email'
												type='email'
												value={formData.email}
												onChange={handleFormChange}
												required
											/>
											<Checkbox
												label='Is an administrator?'
												name='isAdmin'
												defaultChecked={formData.isAdmin}
												disabled={user?._id === formData._id}
												onChange={(e) => {
													setFormData((prev) => {
														if (!prev) return null;
														return { ...prev, [e.target.name]: Boolean(e.target.checked) };
													});
												}}
											/>
										</div>
										<div>
											<Button type='submit' disabled={isUpdating}>
												Save
											</Button>
										</div>
									</form>
								)}
							</div>
						</div>
					</div>
				</section>
			</main>
		</React.Fragment>
	);
};

export default UserEdit;
